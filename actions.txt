mid - Nov: 
ilastik px classifier testing + masking w opencv --> dead end (fluorescent estimates not adequate) 
=================

4.12 - 5.12

sem image automatic histogram creation: 
* thresholding option testing - otsu vs classic bin vs adaptive --> sticking with adaptive (visual)
* suitable block/kernel size/constant C obtained through testing w trackbars :))
* final processing happening with cv2.adaptivethreshold(cv2.ADAPTIVE_THRESH_MEAN_C,cv2.THRESH_BINARY,9,2) and cleaning image using median filter with size 3 to reduce the salt-and-pepper noise

https://docs.opencv.org/4.x/d7/d4d/tutorial_py_thresholding.html

distance transform - pixel distance from closest black pixel 


detecting text - 
pytesseract 

find corner with a lot of black - 
get black rectangle dim-s:

take units from left to right - middle of the rectangle - 
for text 
binary thresh --> 

um: resize 500, 500 --> (um as text) --> psm = 6
um: 46,33,34,48 (psm 10) (38, 35, 26)

zero-padded 1px - 28 um

nr 1: resize 38 : I, resize 46: i, 40: | (psm 10), resize: 48 --> 4


nm: 42,43,44,45,46,48,49 (27 sometimes)

nr 400: 28, 40, 48, 43, 42

nr 2: 33

============
TODO (sem):
--> obtain scale

1. find black rectangle from image 
- findContours()
2. create bounding boxes for number and unit --> do the detection
3. find length of ruler in pixels 



--> do the measurements
4. distancetransform: obtain high value range to a certain threshold - obtain all 
idx-s row-wise? - 2x distance? - too round probably 
5. tangent creations along randomly selected black-white pixel neighborhoods --> draw lines of 90 deg angle along tangent and find interceptions
6. try out the circle technique 


=================
5.12 

* network drive connection through ubuntu file explorer achieved --> needs terminal side
mapping (agree on which folders to check what etc.) 
https://wiki.ut.ee/pages/viewpage.action?pageId=17105488
server address = smb://aura.domenis.ut.ee/

file_path = run/user/1000/gvfs/smb-share:server=aura.domenis.ut.ee,share=tensonilabor

* thresholding very image dependent 

in general - 32 pixels from rightmost border for unit obtaining 

====

zero padded unit and number with 1 px
10-22 range resize

value_unit_scale output from sem image (scale_obtain.py)


=================
meeting 6.12 

SYTO9/FM/PI presentation discussion 
pharma webdriver access 
SEM nr detection

=================
20./21.12 

thesis initial structure/intro/abstract writing 
czi2tif still manual 
meeting with Marta - XML metadata import possible with ZEN Image Processing Software (Zen Blue but not Zen Black)
(microscope Zeiss LSM 710) 

==================================

TODO (remains): 
* ilastik px classifier needs different images as training inp
* headless running should be tested
* cellprofiler should maybe be given another chance - maybe ask Marta for a sample cppipeline (pipeline sent)
* determine color-based what is inside the sample 
* SEM diameter measurements
* czi2tif converter working
SEM
* foreground/background segmentation for SEM  (choose points in foreground - select only points in the foreground - fit reg line - 90 deg angle) for SEM 
(precision comparison - with manual measuring (time))

questions from presentation (case study)
* check fluorescent info - R/G channel 
* PI/SYTO effects - comparing the intensity of fluorescences (minus the background)
* timelapse changes - area, change of shape 



==================================================
1.01 - 4.01 - sick 

... - 7.01 - lit review doc

=================================
7.01 

case study beginning

fm-64/syto-9 

What is % of bacterial cells (prestained with FM4-64) that stain with SYTO-9?

0. bacteria detection - color-based 
* separate - R, G channel 
* threshold based on color intensity 
* amount of bac in G channel / amount of bac in R channel

1. roheline/punane

Is there a difference between fiber material (hypothesis: addition of PEO to fibers will make them more permeabel and more bacteria stain with syto-9)?

SYTO9 PEO vs PCL  (sub background?)

=======
8.02 

tested out segmentation techniques - k-means, skimage seg lib
ran ilastik which failed
tested cp again - still don't like it 

==
TODO 
need to find a way to count the objects:
find an area which makes sense and then sum up all areas and divide by this px area --> approx count?

syto-9 staining question
and the rest of the study


================================
* color based detection (try out the ilp model)

* FM/PI - green/red ratio (division)

==============
11.01

fiber segmentation for sem measurements 

*ilastik sending err for sem tif-s 
solution convert to .jpg - 

# cmd line
sudo apt-get install imagemagick
mkdir jpg
convert *.tiff -set filename: "%t" jpg/%[filename:].jpg



index err in feature selection :)))

features used for fiber segmentation: 
https://github.com/ilastik/ilastik/blob/6913aed0ad4bca7cc947e24736a8350ddf9563ab/lazyflow/operators/filterOperators.py#L35

color/intensity: gaussian smoothing (sigma =1)
edge: laplacian of gaussian (sigma=1), gaussian gradient magnitude (sigma =1), difference of gaussians (sigma=1) 
window_size = 2
sigma = 1

ilastik uses fastfilters lib: https://github.com/svenpeter42/fastfilters - (py 2.7)
fastfilters.gaussianSmoothing()

diff of gaussians: fastfilters.gaussianSmoothing(image, sigma0, window_size) - fastfilters.gaussianSmoothing(
                image, sigma1, window_size

mag: fastfilters.gaussianGradientMagnitude()
https://labelstud.io/
lap: fastfilters.laplacianOfGaussian()


testing scipy image functions instead - skimage imports 

exporting images: 
.tif, convert to integer 8-bit, renormalize from 0, 1 to 0 , 255


couple of ideas:
take magnitude image - canny edge (sharpen) - ttry to fill in the gaps w color :no:
take the magnitude image - give inp to ilastik - fg/bg and extraction - maybe better? :no:

px selection criteria established - kernel 13x13

=========================
meeting with Dima (12.01): 

* solution testing needed for theory? :no:
* Q: sem lines: how to determine the direction of line creation and then confirm perpendicularity? 

A: 

* normalization of the image - local - rolling ball/local context normalization

* ndimage.label - connected components size? - for rm noise
* breadth-first search - dynamic programming - closest point - draw a line 
* pca projection?

##
* consider label studio (https://labelstud.io/) 
+ u-net network for rm noise - fg and bg extraction
* statistical difference + time metrics 
## 

===========================
12.01 

* found some articles about how to measure fiber diameters

==================
13.01 meeting with Marta - postponed

* why is DiameterJ not used as widely? 

=========
17.01 

reading articles about fiber diameter measurements

sobel vs canny: sobel can mostly handle edges that are hor/ver, canny can handle all sort of edges

cython - programming lang which is a superset of py programming lang designed to have performance like c


potentially useful py packages: opencv, skimage (uses np arr as img objects) - segmentation module, scipy - multidim img processing, numpy, 
simpleITK (https://github.com/InsightSoftwareConsortium/SimpleITK-Notebooks) - image segmentation and registration - had fluor segmentation of some sort
pydip in diplib - https://github.com/DIPlib/diplib - .lsm extension plugin suggestion for imageio.v3.read()

not so useful: PIL, mahotas (desgined for bioimg informatics), pgmagick 
(https://neptune.ai/blog/image-processing-python-libraries-for-machine-learning)

ml/nn: keras, tensorflow, pytorch, openvino (pre-trained models from a openmodel zoo, dev-d by intel), caffee 
img augmentation: mit albumentations 


histogram threhsolding - local minima of grayscale intensity 

lcn used in torch networks

checking python-bioformats for czi meta to xml and .tif
pycziutils for zeiss czi files (uses python bioformats) - requires javabridge
aicsimageio (https://github.com/AllenCellModeling/aicsimageio) - saving as ome-tiff - should be able to read metadata? # giving incorrect error 

czitotiff.py edited - blue channel off, zstack consideration, but still strange noise 
- also still no way to find meta 

18.01

======

tried out labelme next to label studio 


tried to take out random white regions with ndimage label - kinda unssuccessful 
will try to segment w labelstudio and run w u-net today
will try out bread-depth search (most used distance transform)

18.01 meeting with Dima 
=============================
u-net 
-----------
256x256?
stitch - patch 
1 image training - patching (48?) - train (1 img) + val (1 img)
-----------
annotation in label studio - one image took 2h :)) - tab keeps on crashing 


color-based detection - after labelling try massive erosion (+ watershedding)
- did not work

====================
19.01 meeting with Marta

case study

* addition of syto sample not of the same region, is this ok?
* how to determine the dependence of fiber material? - not needed 
* what happens in time - regions are not the same - how do you measure the change?

=======
counting bac 

chain - gradient?
r,g channel - control (has green noise (should be around 5%))



=======

fiber measurement
* ask about the data share (fiber images) - possibly, confirm w Karin 
* why is DiameterJ not used as widely? 
* microbeJ 

===

ligipääs peaks olema farma serverile
smb://gorgo.domenis.ut.ee/ - MVFA kaust

===
20.01

tried to get u-net to work 

===================
23.01 

* testing some skimage modules, 
* testing out some morph. operations 
* train-unet some old crap - req-s py 3.6, colab no-likey

==============
24.01

* pyimagej py wrapper to test (w diameterj plugin)
* testing diameterj (checking it out in windows) 
* send a demo img to dima at some pt 
* found another u-net to potentially test 

9.5 hr robotics day after that :))
===============
25.01


* pyimagej py wrapper testing 

workflows that require headless operation but also need to interact with ImageJ elements that are tied to the GUI, can be achieved w virtual displays - xvfb can create a virtual frame buffer for ImageJ's GUI el-s w/o displaying any screen output

- did not get it working yet (check pyimagej_test.py)

(https://forum.image.sc/t/pyimagej-create-stack-run-zproject-plugin/71730)

* napari can be used for czi meta? 

- 

* unet testing 

-

* breadth-src testing 

-

meeting w Dima


* dilate black comp-s (1), find closest dist of one black component to another comp
* breadth-src programming
* local maxima + watershed (skeletonize) - color gradient 
* consider writing content in docs (ref issue tho) 

========
26.01

0. try to measure dm-s

--> ended with polyline 

========
27.01-28.01 - nitševo delajo 

========
29.01 

0. check czi converter

what is needed from xml - physical size, img dim-s, amount of stacks, 

* AICSImage import
 - ome_metadata module gives xml on amount of stacks, and physical px size, dim-s
 - conversion to xarray and some transposing resulted in image in red 
 
* czifile import 

 - outputs the whole xml data (distance Id, Value)
 - created a memory-mappable tiff - needs some work to get images out of it - ended with the same output as aicsimage - red image
 
 tifffile lib tifffile module has good doc for diff file types
 - will try to use pylibtiff to stack 3 channels of matrices and create the images out of it -
 layers are unordered - red image still at the end
 
 
channels are : green - red - transmission (sort of like grayscale) in order to get rgb -> take transmission apart and add values to rgb 
 
--> metadata reachable, tiff creation is a mess - strange noise - green values not as intense in the convert - maybe cv2.gray2bgr not enough




================
30.01

0. dip course arrangements 

===============
31.01

0. unet reshaping issue remains 

tf shaping for masks - converted to grayscale but tf resizing messes it up 



1. 
!bac case study!

bac counter functionality- try local maxima/skeletonizing etc.

--> rm white dots
--> skeletonizing and finding length


==============
01.02  

!bac case study!

manual counting 
control_50killed_syto_PI_2-Image Export-02_c1-3.jpg - 795 green, 849 red (13+13 min per image)

control_50killed_syto_PI_incub4h_1-Image Export-04_c1-3.jpg - green 289, red ()

1. length of whites in bac - not sufficient enough (via skeletonizing)


===========
meeting w Marta 

* mida teha kollaste puhul? (võtta millise intensiivsus on kõrgem ja panna ta kas rohelisse või punasesse?
* tech. issues - postponed to friday (3.02)

===========
02.02

* unet tested w resized val size - still some tensor issue, needs a proper dive into 
the example again 


===========
3.02 

**********
meeting w Marta 

check merged image (r+g channel - no need for transmission channel)
 - find all bac -
check if the bac is in r/g measure intensity - save data

bacteria size (user prompt - maybe file name would solve it?)

smallest path from k to k

bioicons for graphical abstract- biorender (https://biorender.com/)

***********


1. bac counter - test maxima?
- tested watershedding, blob detection (https://scikit-image.org/docs/stable/auto_examples/features_detection/plot_blob.html#sphx-glr-auto-examples-features-detection-plot-blob-py), local maxima - dead end
- sq/cubic - extrema improve - need to find a way to count the center pt-s (thresh?)
- normalization needs to be applied 

=================
04.02-05.02 (until 15)

dip course stuff 

=======
05.02 

1. bac counter 
- normalization  - using clahe
- find maxima points 

on object counting: https://www.ijareeie.com/upload/2014/april/27C_Literature.pdf
hough circles 
hough transform 


========
6.02 

nitševo delajo 

=======
7.02 

*****
1. bac counter 

* testing with subtraction of distance transform of image and distance transform of dilated image
* top hat transform (ligh against black background)
* black hat transform (dark against light background)
* eroding with elliptical struc el is not enough 
* testing with hough circles 
* watershedding is not enough

--> need a way to detect bacterial chunks and take them into pieces ?

--> take a patch-based approach instead and find contours - splitting patches difficult, after how do you know where the clumps are?

* try out the merged approach - compare and count? - 
* or should create patches? and contour and compare? to diff thresholded channels? 
* gaussian fitting? (https://www.baeldung.com/cs/peak-detection-2d)
* read more literature to see how it has been solved 

====
8.02

meeting w dima 

centernet 
guided erosion
send img to dima

* cs peeps: yolo, centernet, unet - need to read/consider/test dl methods - keras r-cnn
*****

instance segmentation 


what i did : dm measurer 

*****

#np hack#
* use 
x0, y0 = np.unravel_index(np.argmax(image), image) 
instead of 
max_index = np.where(image >= np.max(image))
x0 = max_index[1] #Middle of X axis
y0 = max_index[0] #Middle of Y axis


========
09.02 

* dip stuff 

========
10.02 

* dm measurer test run 
* dm measurer bug fixes 
* bac counter ideas sent to me
* following issues to be solved: 

why are some dm-s 0-s: look at some ex-s 
why are there so many exceptions - even if the 34 pad was considered? - go through these exceptions and detect bugs 

===========
11.02 

nitševo delajo
=========
12.02 

* pyimagej module import/segmentation solving 


=========
discoveries  

* 2d u-net for bac segmentation: https://bioimage.io/#/?partner=deepimagej&type=model&id=10.5281%2Fzenodo.7261974

imagej plugins 
* deepimagej - pre-trained nn-s in imagej & fiji
* diversepathsj - shortest paths for bioimage analysis
https://academic.oup.com/bioinformatics/article/34/3/538/4259193
* FAST: processing a set of single-channel fluorescence img-s - user prompt - threshold, roi, measure intensity 

* set of imagej plugins: https://imagej.github.io/list-of-update-sites/

* segmentation in pyimagej (from diameterj_segment.jim src): (end resul and bg is white)
- srm w diff grey values (q=12,25,50,100)
- srm img to be huang thresholded w method ignore_white white
- Cleans up noise in image by filling in dark regions, despeckling in a loop until no noise (5px or less) groups remain, removes outliers (radius = 3 @ threshold 50) and erodes+dilates surfaces to remove surface morphological features.

about srm in python
https://mail.python.org/archives/list/scikit-image@python.org/thread/2TDQQSKA3Z2UV4DG2HXJH3TIWMLV5KXQ/
 
* compact watershedding feature in skimage 

* fixing and testing srm code from https://github.com/mubastan/segment-py

* huang thresh - fuzzy logic based 
==========
13.02 

* solve bac counter 

==>
* Mean Filter
* Looked for local intensity maxima (e.g. pixel must have the highest intensity within the disk with radius 3-4px)
* Used watershed to spread from maximum points (e.g. until to 4px distance)
* Classified the found maxima by intensity and contrast
==>

--> more or less ok for control counter (should count reds+greens from some images to confirm) (suggested_counter.py)

* solve case study 

--> czitotiff.py acting up for czi with fibers fibers_24h_growth_syto_PI_1.czi?

* pyimagej segmentation imitation 
https://www.youtube.com/watch?v=chue-u3RpBM - pyimagej tutorial testing 

====
rnd idea for bac counter: using transmission channel - get the contour and check if there is a some intensity in r/g channel 

=============
14.02

* unet 

--> 0.62 acc for cat ce, for bin ce it's 1:)) - gradient explosion (error gradients accumulate and result in very large updates to neural network model weights) - clipnorm - each weight clipped so that its norm is no higher than 1.0 

--> loss is nan - wrong activation was used 

(https://cnvrg.io/keras-custom-loss-functions/)

--> changing activation func in output layer from sigmoid to relu boosts accuracy immediately? 

--> relu outputs a mask, sigmoid does not  - discuss w dima (relu does not make sense to use - 0 to inf)

--> fluctuating so much 

* weka test

https://scikit-image.org/docs/stable/auto_examples/segmentation/plot_trainable_segmentation.html

* dip lab2 til adaptive th

* farm võrguketta ligipääs 
w vpn
- smb://gorgo.domenis.ut.ee 
domenis, username, pwd 
https://wiki.ut.ee/pages/viewpage.action?pageId=37225421#V%C3%B5rgukettadjagrupit%C3%B6%C3%B6kaustad-gorgo.domenis.ut.ee(193.40.5.126)


* sanity checks for bac counter (count bac) 
 - with def disk (3 for g, 4 for r)
 
--> incub4h-1-04imageexport
reds: 358, greens: 302
time it took to manually count: 4.5min + 3.5 min
script result: 
time: 0.26s
reds: 402, green: 315

--> incub4h-1-05imageexport
reds: 234, greens: 180
time it took: 2.25min + 2.5 min

script result: 
reds: 310, greens: 245 (disk size may be the issue for smaller amount of bac - maybe needs some scaling depending on bac coverage on image)
time: 0.29s


--> incub4h-1-06imageexport
reds: 197, greens: 196
time it took: 2 + 2.25 min
script result: 
reds: 298, greens: 261
time: 0.30s


--> seems like ~4x less coverage sample needs +4 size disk
=======
15.02

* dip lab seminar 

* marta
 
- pc (spektromeetria tuba - hp prosth pc 9th gen i5 proc)
- ask for more r,g bac microscope img-s
- bac size not dependent on fluor color but transmission 
- 3d world - fm_syto counting bacteria (z-stack) - which one is computationally less expensive - nr of 2d stacks or one 3d? 
- g+r and compare w separate channels - find ratios for case study!!!

####
for funsies
- syto fiber microscopy (xml) vs sem (dry, polymer morphin) of the same material - compare distros 

* dima 

- unet 

changing range from 0 to 255 to 0 to 1, resize images 

* unet testing 

========
16.02 

*prep for dip

*dip 13.30-18

========
17.02

* online fiber diameter measurer using clicks? 
https://github.com/fcossio/FiberDiameter
check out their segmentation options

========
18.02-19.02

* dm fiber measurer exception 
--> solved some issues with having 0 dm or very obscure results 
--> need to fix the edge cases 

========
20.02

* edge cases solving 

--> conditioned for cases of 200 points 
--> tested w 1000 points and got new conditions to create :))
--> corners are possibly mismatching origin-wise in the nearest_white_function() - upper right corner n2 correct when x > w-y but not when x < w-y :)) --> check all corners!! - the n2 is coming from either x,y 
--> decided to make kernel_2 bigger than needed for corner-wise - possible addition in time, but more clear for the mind (bad decision in the end)
--> check that compound conditions are first, then ind
--> could just np pad 35x34 frame, but would lose possibly lose quite a lot of info




* fiber segmentation solving

--> continued exploring the pyij ecosystem: diameterj segment: macro canceled, wrote an issue to pyiamgej repo (~3h) // probably sth to do with plugin dir 

# options 
# enhance contrast, removal of noise 
# huang thresholding 
# edge-based detection 
# Region-based segmentation: the image is divided into regions based on the properties of the pixels within those regions. regions that are likely to contain fibers are then selected and segmented.
# ml: can learn to identify fibers based on a training set of labeled images.

--> tested out some classical methods (3 of the options above) - not successful 
--> wrote to the dev of fiberdiameter.com to ask about the pre-trained model - meeting on 22.02 @ 18


=======
→21.02← 

* exceptions continued 
--> making the ranges bigger can result in 0s as there is new areas covered which is not considered when creating the kernel_1 --> need to make sure the shape only elongates to the right regions (that is e.g. UR+LR then it should elongate to the right) - refactoing everything again :)) - this is not an issue for singular quarters as their direction vector is bidirectional (diagonal), for 3 quarters the lower border needs to stay fixed

--> all conditions should be met now - will do some more tests on diff seeds, just to be sure


* fiber segmentation solving

--> testing out a simpler unet 


* fiber batch testing (if segmentation not solved --> 22.02)

====
* bac counter batch testing 
* czi2tiff err solving
--> czitotiff.py acting up for czi with fibers fibers_24h_growth_syto_PI_1.czi?

=======
* solve case study (stack-based approach?) 



========
22.02

* dip seminar + meeting
* marta

--> bias in measuring fibers (expect better results from your own work) - med science ref. + time win
--> bias in making microscopy images  

* dima

--> carry on debugging unet 



* fibermeasurer model meeting 

--> unet model 
--> possible colab in the future
--> their thingy works on some stuff 


* dip lab 2



========
23.02 

* dip practical 

=======
24.02

nitševo delaju

======
25.02 - 26.02

* dip lab2 
* sõidueksami prep

========
27.02 

* sõidueksam ✅️
* issues in colab, setting env up in hpc jupyter and running there instead 

==========
28.02 

* testing unet3
* improving the shorter unet 
* sem paper on circular thresholding 

========
1.03

pot ways to imprpove u-net:
resize img-s (trying w 128x128 instead of 24x32), tf gpu

====
2.03 

dip practical 
====
3.03

* tried the pyimagej w an older version 
* checked the marr-hildreth edge algo - https://github.com/adl1995/edge-detectors/blob/master/marr-hildreth-edge.py
* avg/gaussian blur - clahe - powering - otsu thresh (pot. pipeline) 

====
4.03

* z-stack consideration 
* czitotiff code testing 

====
5.03 

* http://www.physics.hmc.edu/~gerbode/wppriv/wp-content/uploads/2012/06/DS_ZISRAW-FileFormat_Rel_ZEN2011.pdf
physical unit fetching
<Scaling>
      <Items>
        <Distance Id="X">
          <Value>1.3178822554981574e-007</Value>
          
          value in meters (0.13 um)
* czitotif tif files saved to the network folder 
* error messages sent to dev in airflow 
* czitotif polishing 

=====
6.03 

*czitotif polishing 
*case study 

=====
7.03 

*fiber segmentator 
*batch testing for the dm measurer 

=====
8.03 

*write 10 pages of the thesis 
*meeting w Marta: folder setup and trigger alerts or stuff to consider for organization,
database col feat-s, case study results
*meeting w Dima 

====
9.03 

dip practical 

=========

bac case study - consider using the transmission channel for support 



=========







=====
general TODO:

* quant. segmentation analysis - https://reader.elsevier.com/reader/sd/pii/S0263224117307042?token=EE5FC2D68E9E41384008E284C5F4710B2E3E60FA4387C77D003F0DF91260BD8536ED5454739F357B344C29E9CABEE1FD&originRegion=eu-west-1&originCreation=20230228195612

* cs perspective: yolo, centernet (bac counter)
* uncertainty measures, losing info w img processing (or adding noise) 

* case study
* check pyimagej converter - if cannot, try to reproduce the pre-processing
* consider other imagej modules for studies 
* look into cellpose - for bac counter/case study?

* task organization - airflow or sth trigger-based - what to have for the bac side?
* local db setup etc. 

* writing - overleaf (defo write about imagej)
* dm measurer nice-to-have: create tangents of polyline points, create lines between the tnagetns and the source, find best tangent aka px

kinda done
* should normalize locally microscopic images
* get czi2tif working
* get unet working 

